plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-kapt"
    id "kotlin-parcelize"
    id "dagger.hilt.android.plugin"
    id "androidx.navigation.safeargs.kotlin"
}

android {
    compileSdk AndroidSdk.compileSdk

    defaultConfig {
        applicationId AndroidApplication.appId
        minSdk AndroidSdk.minSdk
        targetSdk AndroidSdk.targetSdk
        versionCode AndroidApplication.versionCode
        versionName AndroidApplication.versionName

        testInstrumentationRunner AndroidApplication.testRunner

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildFeatures {
        dataBinding = true
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    implementation project(':core')
    implementation project(':business')
    implementation project(':data')

    implementation Libraries.kotlinCoreKtx

    implementation Libraries.hilt
    kapt Libraries.hiltCompiler

    implementation Libraries.okHttp
    implementation Libraries.okHttpLogging
    implementation Libraries.retrofit
    implementation Libraries.retrofitGsonConverter

    implementation Libraries.appcompat
    implementation Libraries.materialDesign
    implementation Libraries.constraintLayout
    implementation Libraries.fragmentKtx
    implementation Libraries.navigationFragmentKtx
    implementation Libraries.navigationUiKtx
    implementation Libraries.paging

    implementation Libraries.exoplayerCore
    implementation Libraries.exoplayerUI
    implementation Libraries.exoplayerDash

    implementation Libraries.timber

    testImplementation(testFixtures(project(":business")))
    testImplementation TestLibraries.junit
    testImplementation TestLibraries.mockk
    testImplementation TestLibraries.kluent
    testImplementation TestLibraries.archCoreTesting
    testImplementation TestLibraries.coroutinesTest
}

kapt {
    correctErrorTypes true
}